{"ast":null,"code":"import { gql } from 'apollo-boost';\nexport const CREATE_CART = gql`\n    mutation checkoutCreate($input: CheckoutCreateInput!) {\n        checkoutCreate(input: $input) {\n            checkout {\n                id\n            }\n            checkoutUserErrors {\n                code\n                field\n                message\n            }\n        }\n    }\n`;\nexport const GET_CART_QUERY = gql`\n    fragment checkout on Checkout {\n        id\n        webUrl\n        subtotalPriceV2 {\n            amount\n            currencyCode\n        }\n        totalTaxV2 {\n            amount\n            currencyCode\n        }\n        totalPriceV2 {\n            amount\n            currencyCode\n        }\n        lineItems(first: 250) {\n            pageInfo {\n                hasNextPage\n                hasPreviousPage\n            }\n            edges {\n                node {\n                    id\n                    title\n                    variant {\n                        id\n                        title\n                        image {\n                            transformedSrc\n                        }\n                        priceV2 {\n                            amount\n                            currencyCode\n                        }\n                    }\n                    quantity\n                }\n            }\n        }\n    }\n    query checkout($checkoutId: ID!) {\n        node(id: $checkoutId) {\n            ... on Checkout {\n                ...checkout\n            }\n        }\n    }\n`;\nexport const CHECKOUT_LINE_ITEMS_REPLACE_MUTATION = gql`\n    mutation checkoutLineItemsReplace($checkoutId: ID!, $lineItems: [CheckoutLineItemInput!]!) {\n        checkoutLineItemsReplace(checkoutId: $checkoutId, lineItems: $lineItems) {\n            checkout {\n                id\n            }\n            userErrors {\n                code\n                field\n                message\n            }\n        }\n    }\n`;","map":{"version":3,"sources":["E:/current-work/web/react.js/react-next-store/components/CartController/_types.ts"],"names":["gql","CREATE_CART","GET_CART_QUERY","CHECKOUT_LINE_ITEMS_REPLACE_MUTATION"],"mappings":"AAAA,SAASA,GAAT,QAAoB,cAApB;AA4CA,OAAO,MAAMC,WAAW,GAAGD,GAAI;;;;;;;;;;;;;CAAxB;AAeP,OAAO,MAAME,cAAc,GAAGF,GAAI;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CAA3B;AAkDP,OAAO,MAAMG,oCAAoC,GAAGH,GAAI;;;;;;;;;;;;;CAAjD","sourcesContent":["import { gql } from 'apollo-boost';\r\nimport { LineItem } from '../PDPComponent/_types';\r\n\r\nexport type PriceV2 = {\r\n  amount: string;\r\n  currency: string;\r\n};\r\n\r\nexport interface GetCartRequest {\r\n  checkoutId: string;\r\n}\r\n\r\nexport type GetCartResponse = {\r\n  node: {\r\n    id: string;\r\n    webUrl: string;\r\n    subtotalPriceV2: PriceV2;\r\n    totalTaxV2: PriceV2;\r\n    totalPriceV2: PriceV2;\r\n    lineItems: {\r\n      pageInfo: {\r\n        hasNextPage: boolean;\r\n        hasPreviousPage: boolean;\r\n      };\r\n      edges: LineItem[];\r\n    };\r\n  };\r\n};\r\n\r\nexport type CreateCartResponse = {\r\n  data: {\r\n    checkoutCreate: {\r\n      checkout: {\r\n        id: string;\r\n      };\r\n    };\r\n    checkoutUserErrors: string[];\r\n  };\r\n};\r\n\r\nexport type CreateCartRequest = {\r\n  input: object;\r\n};\r\n\r\nexport const CREATE_CART = gql`\r\n    mutation checkoutCreate($input: CheckoutCreateInput!) {\r\n        checkoutCreate(input: $input) {\r\n            checkout {\r\n                id\r\n            }\r\n            checkoutUserErrors {\r\n                code\r\n                field\r\n                message\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const GET_CART_QUERY = gql`\r\n    fragment checkout on Checkout {\r\n        id\r\n        webUrl\r\n        subtotalPriceV2 {\r\n            amount\r\n            currencyCode\r\n        }\r\n        totalTaxV2 {\r\n            amount\r\n            currencyCode\r\n        }\r\n        totalPriceV2 {\r\n            amount\r\n            currencyCode\r\n        }\r\n        lineItems(first: 250) {\r\n            pageInfo {\r\n                hasNextPage\r\n                hasPreviousPage\r\n            }\r\n            edges {\r\n                node {\r\n                    id\r\n                    title\r\n                    variant {\r\n                        id\r\n                        title\r\n                        image {\r\n                            transformedSrc\r\n                        }\r\n                        priceV2 {\r\n                            amount\r\n                            currencyCode\r\n                        }\r\n                    }\r\n                    quantity\r\n                }\r\n            }\r\n        }\r\n    }\r\n    query checkout($checkoutId: ID!) {\r\n        node(id: $checkoutId) {\r\n            ... on Checkout {\r\n                ...checkout\r\n            }\r\n        }\r\n    }\r\n`;\r\n\r\nexport const CHECKOUT_LINE_ITEMS_REPLACE_MUTATION = gql`\r\n    mutation checkoutLineItemsReplace($checkoutId: ID!, $lineItems: [CheckoutLineItemInput!]!) {\r\n        checkoutLineItemsReplace(checkoutId: $checkoutId, lineItems: $lineItems) {\r\n            checkout {\r\n                id\r\n            }\r\n            userErrors {\r\n                code\r\n                field\r\n                message\r\n            }\r\n        }\r\n    }\r\n`;\r\n"]},"metadata":{},"sourceType":"module"}