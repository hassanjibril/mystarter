{"ast":null,"code":"import _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport Document, { Head, Main, NextScript } from 'next/document';\nimport { ServerStyleSheets } from '@material-ui/core/styles';\nimport { theme } from '../views/theme';\nexport default class MyDocument extends Document {\n  render() {\n    return __jsx(\"html\", {\n      lang: \"en\"\n    }, __jsx(Head, null, __jsx(\"meta\", {\n      name: \"theme-color\",\n      content: theme.palette.primary.main\n    }), __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\n    })), __jsx(\"body\", null, __jsx(Main, null), __jsx(NextScript, null)));\n  }\n\n} // eslint-disable-next-line @typescript-eslint/unbound-method\n\nMyDocument.getInitialProps = async ctx => {\n  // Resolution order\n  //\n  // On the server:\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. document.getInitialProps\n  // 4. app.render\n  // 5. page.render\n  // 6. document.render\n  //\n  // On the server with error:\n  // 1. document.getInitialProps\n  // 2. app.render\n  // 3. page.render\n  // 4. document.render\n  //\n  // On the client\n  // 1. app.getInitialProps\n  // 2. page.getInitialProps\n  // 3. app.render\n  // 4. page.render\n  // Render app and page and get the context of the page with collected side effects.\n  const sheets = new ServerStyleSheets();\n  const originalRenderPage = ctx.renderPage;\n\n  ctx.renderPage = () => originalRenderPage({\n    enhanceApp: App => props => sheets.collect(__jsx(App, props))\n  });\n\n  const initialProps = await Document.getInitialProps(ctx);\n  return _objectSpread({}, initialProps, {\n    // Styles fragment is rendered after the app and page rendering finish.\n    styles: [...React.Children.toArray(initialProps.styles), sheets.getStyleElement()]\n  });\n};","map":{"version":3,"sources":["E:/current-work/web/react.js/react-next-store/pages/_document.tsx"],"names":["React","Document","Head","Main","NextScript","ServerStyleSheets","theme","MyDocument","render","palette","primary","main","getInitialProps","ctx","sheets","originalRenderPage","renderPage","enhanceApp","App","props","collect","initialProps","styles","Children","toArray","getStyleElement"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,QAAP,IAAmBC,IAAnB,EAAyBC,IAAzB,EAA+BC,UAA/B,QAAiD,eAAjD;AACA,SAASC,iBAAT,QAAkC,0BAAlC;AACA,SAASC,KAAT,QAAsB,gBAAtB;AAEA,eAAe,MAAMC,UAAN,SAAyBN,QAAzB,CAAkC;AAC/CO,EAAAA,MAAM,GAAG;AACP,WACE;AAAM,MAAA,IAAI,EAAC;AAAX,OACE,MAAC,IAAD,QAEE;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,OAAO,EAAEF,KAAK,CAACG,OAAN,CAAcC,OAAd,CAAsBC;AAAxD,MAFF,EAGE;AACE,MAAA,GAAG,EAAC,YADN;AAEE,MAAA,IAAI,EAAC;AAFP,MAHF,CADF,EASE,oBACE,MAAC,IAAD,OADF,EAEE,MAAC,UAAD,OAFF,CATF,CADF;AAgBD;;AAlB8C,C,CAqBjD;;AACAJ,UAAU,CAACK,eAAX,GAA6B,MAAOC,GAAP,IAAe;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,QAAMC,MAAM,GAAG,IAAIT,iBAAJ,EAAf;AACA,QAAMU,kBAAkB,GAAGF,GAAG,CAACG,UAA/B;;AAEAH,EAAAA,GAAG,CAACG,UAAJ,GAAiB,MAAMD,kBAAkB,CAAC;AACxCE,IAAAA,UAAU,EAAGC,GAAD,IAAUC,KAAD,IAAWL,MAAM,CAACM,OAAP,CAAe,MAAC,GAAD,EAASD,KAAT,CAAf;AADQ,GAAD,CAAzC;;AAIA,QAAME,YAAY,GAAG,MAAMpB,QAAQ,CAACW,eAAT,CAAyBC,GAAzB,CAA3B;AAEA,2BACKQ,YADL;AAEE;AACAC,IAAAA,MAAM,EAAE,CAAC,GAAGtB,KAAK,CAACuB,QAAN,CAAeC,OAAf,CAAuBH,YAAY,CAACC,MAApC,CAAJ,EAAiDR,MAAM,CAACW,eAAP,EAAjD;AAHV;AAKD,CAtCD","sourcesContent":["import React from 'react';\r\nimport Document, { Head, Main, NextScript } from 'next/document';\r\nimport { ServerStyleSheets } from '@material-ui/core/styles';\r\nimport { theme } from '../views/theme';\r\n\r\nexport default class MyDocument extends Document {\r\n  render() {\r\n    return (\r\n      <html lang=\"en\">\r\n        <Head>\r\n          {/* PWA primary color */}\r\n          <meta name=\"theme-color\" content={theme.palette.primary.main} />\r\n          <link\r\n            rel=\"stylesheet\"\r\n            href=\"https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap\"\r\n          />\r\n        </Head>\r\n        <body>\r\n          <Main />\r\n          <NextScript />\r\n        </body>\r\n      </html>\r\n    );\r\n  }\r\n}\r\n\r\n// eslint-disable-next-line @typescript-eslint/unbound-method\r\nMyDocument.getInitialProps = async (ctx) => {\r\n  // Resolution order\r\n  //\r\n  // On the server:\r\n  // 1. app.getInitialProps\r\n  // 2. page.getInitialProps\r\n  // 3. document.getInitialProps\r\n  // 4. app.render\r\n  // 5. page.render\r\n  // 6. document.render\r\n  //\r\n  // On the server with error:\r\n  // 1. document.getInitialProps\r\n  // 2. app.render\r\n  // 3. page.render\r\n  // 4. document.render\r\n  //\r\n  // On the client\r\n  // 1. app.getInitialProps\r\n  // 2. page.getInitialProps\r\n  // 3. app.render\r\n  // 4. page.render\r\n\r\n  // Render app and page and get the context of the page with collected side effects.\r\n  const sheets = new ServerStyleSheets();\r\n  const originalRenderPage = ctx.renderPage;\r\n\r\n  ctx.renderPage = () => originalRenderPage({\r\n    enhanceApp: (App) => (props) => sheets.collect(<App {...props} />),\r\n  });\r\n\r\n  const initialProps = await Document.getInitialProps(ctx);\r\n\r\n  return {\r\n    ...initialProps,\r\n    // Styles fragment is rendered after the app and page rendering finish.\r\n    styles: [...React.Children.toArray(initialProps.styles), sheets.getStyleElement()],\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}