{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { Button, Typography } from '@material-ui/core';\nimport { useQuery } from '@apollo/react-hooks';\nimport Link from 'next/link';\nimport Head from 'next/head';\nimport { Styled } from './_styles';\nimport { PRODUCT_INFO_QUERY } from './_types';\nimport ProductDetail from '../ProductDetail/ProductDetail';\nimport ManualToothbrush from '../pdp/ManualToothbrush';\nimport PageContainer, { PageSize } from \"~viewsLay/PageContainer\";\n\nconst PDPComponent = ({\n  handle\n}) => {\n  let product = null;\n  const queryVariables = {\n    handle: `${handle}`\n  };\n  const {\n    loading,\n    error,\n    data\n  } = useQuery(PRODUCT_INFO_QUERY, {\n    variables: queryVariables\n  });\n\n  function extractProduct() {\n    console.log(data);\n    return {\n      id: data.productByHandle.id,\n      handle: data.productByHandle.handle,\n      title: data.productByHandle.title,\n      description: data.productByHandle.description,\n      imageSrc: data.productByHandle.images.edges[0].node.transformedSrc,\n      price: data.productByHandle.priceRange.minVariantPrice.amount,\n      variants: data.productByHandle.variants\n    };\n  }\n\n  if (!loading && !error && data) {\n    product = extractProduct();\n  }\n\n  return __jsx(React.Fragment, null, loading && __jsx(Typography, {\n    variant: \"body1\"\n  }, \"Loading...\"), !loading && !error && product && __jsx(React.Fragment, null, __jsx(Head, null, __jsx(\"title\", null, product.title), __jsx(\"meta\", {\n    name: \"viewport\",\n    content: \"initial-scale=1.0, width=device-width\"\n  })), product.handle === 'm1' ? __jsx(ManualToothbrush, {\n    product: product\n  }) // ) : product.handle === \"teeth-whitening-led-device-kit\" ? (\n  //   <Whitening product={product} />\n  : __jsx(PageContainer, {\n    size: PageSize.medium,\n    paddingTop: 45\n  }, __jsx(Styled.PDPContainer, null, __jsx(Styled.PDPMain, null, __jsx(Link, {\n    href: \"/\"\n  }, __jsx(Button, {\n    variant: \"outlined\",\n    color: \"secondary\"\n  }, \"Back\")), __jsx(ProductDetail, {\n    product: product\n  }))))));\n};\n\nexport default PDPComponent;","map":{"version":3,"sources":["E:/current-work/web/react.js/react-next-store/components/PDPComponent/PDPComponent.tsx"],"names":["React","Button","Typography","useQuery","Link","Head","Styled","PRODUCT_INFO_QUERY","ProductDetail","ManualToothbrush","PageContainer","PageSize","PDPComponent","handle","product","queryVariables","loading","error","data","variables","extractProduct","console","log","id","productByHandle","title","description","imageSrc","images","edges","node","transformedSrc","price","priceRange","minVariantPrice","amount","variants","medium"],"mappings":";AAAA,OAAOA,KAAP,MAAuC,OAAvC;AACA,SAAQC,MAAR,EAAgBC,UAAhB,QAAiC,mBAAjC;AACA,SAAQC,QAAR,QAAuB,qBAAvB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,OAAOC,IAAP,MAAiB,WAAjB;AACA,SAAQC,MAAR,QAAqB,WAArB;AACA,SAAQC,kBAAR,QAAqE,UAArE;AACA,OAAOC,aAAP,MAA0B,gCAA1B;AACA,OAAOC,gBAAP,MAA6B,yBAA7B;AAGA,OAAOC,aAAP,IAAuBC,QAAvB,QAAsC,yBAAtC;;AAMA,MAAMC,YAAsC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAuB;AACpE,MAAIC,OAA2B,GAAG,IAAlC;AACA,QAAMC,cAAsB,GAAG;AAC7BF,IAAAA,MAAM,EAAG,GAAEA,MAAO;AADW,GAA/B;AAGA,QAAM;AAAEG,IAAAA,OAAF;AAAWC,IAAAA,KAAX;AAAkBC,IAAAA;AAAlB,MAA2Bf,QAAQ,CACvCI,kBADuC,EAEvC;AACEY,IAAAA,SAAS,EAAEJ;AADb,GAFuC,CAAzC;;AAOA,WAASK,cAAT,GAA8C;AAC5CC,IAAAA,OAAO,CAACC,GAAR,CAAYJ,IAAZ;AACA,WAAQ;AACNK,MAAAA,EAAE,EAAEL,IAAI,CAACM,eAAL,CAAqBD,EADnB;AAENV,MAAAA,MAAM,EAAEK,IAAI,CAACM,eAAL,CAAqBX,MAFvB;AAGNY,MAAAA,KAAK,EAAEP,IAAI,CAACM,eAAL,CAAqBC,KAHtB;AAINC,MAAAA,WAAW,EAAER,IAAI,CAACM,eAAL,CAAqBE,WAJ5B;AAKNC,MAAAA,QAAQ,EAAET,IAAI,CAACM,eAAL,CAAqBI,MAArB,CAA4BC,KAA5B,CAAkC,CAAlC,EAAqCC,IAArC,CAA0CC,cAL9C;AAMNC,MAAAA,KAAK,EAAEd,IAAI,CAACM,eAAL,CAAqBS,UAArB,CAAgCC,eAAhC,CAAgDC,MANjD;AAONC,MAAAA,QAAQ,EAAElB,IAAI,CAACM,eAAL,CAAqBY;AAPzB,KAAR;AASD;;AAED,MAAI,CAACpB,OAAD,IAAY,CAACC,KAAb,IAAsBC,IAA1B,EAAgC;AAC9BJ,IAAAA,OAAO,GAAGM,cAAc,EAAxB;AACD;;AAED,SACE,4BACGJ,OAAO,IACN,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,kBAFJ,EAKG,CAACA,OAAD,IAAY,CAACC,KAAb,IAAsBH,OAAtB,IACC,4BACE,MAAC,IAAD,QACE,qBAAQA,OAAO,CAACW,KAAhB,CADF,EAEE;AAAM,IAAA,IAAI,EAAC,UAAX;AAAsB,IAAA,OAAO,EAAC;AAA9B,IAFF,CADF,EAKIX,OAAO,CAACD,MAAR,KAAmB,IAAnB,GACA,MAAC,gBAAD;AAAkB,IAAA,OAAO,EAAEC;AAA3B,IADA,CAEF;AACA;AAHE,IAMA,MAAC,aAAD;AAAe,IAAA,IAAI,EAAEH,QAAQ,CAAC0B,MAA9B;AAAsC,IAAA,UAAU,EAAE;AAAlD,KACE,MAAC,MAAD,CAAQ,YAAR,QACE,MAAC,MAAD,CAAQ,OAAR,QACE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC;AAAX,KACE,MAAC,MAAD;AAAQ,IAAA,OAAO,EAAC,UAAhB;AAA2B,IAAA,KAAK,EAAC;AAAjC,YADF,CADF,EAIE,MAAC,aAAD;AAAe,IAAA,OAAO,EAAEvB;AAAxB,IAJF,CADF,CADF,CAXJ,CANJ,CADF;AAiCD,CA9DD;;AAgEA,eAAeF,YAAf","sourcesContent":["import React, {FunctionComponent} from 'react';\r\nimport {Button, Typography} from '@material-ui/core';\r\nimport {useQuery} from '@apollo/react-hooks';\r\nimport Link from 'next/link';\r\nimport Head from 'next/head';\r\nimport {Styled} from './_styles';\r\nimport {PRODUCT_INFO_QUERY, ProductDetails, TransformedProduct} from './_types';\r\nimport ProductDetail from '../ProductDetail/ProductDetail';\r\nimport ManualToothbrush from '../pdp/ManualToothbrush';\r\nimport Whitening from '../pdp/Whitening';\r\n\r\nimport PageContainer, {PageSize} from \"~viewsLay/PageContainer\";\r\n\r\ntype Props = {\r\n  handle: string;\r\n};\r\n\r\nconst PDPComponent: FunctionComponent<Props> = ({ handle }: Props) => {\r\n  let product: TransformedProduct = null;\r\n  const queryVariables: object = {\r\n    handle: `${handle}`,\r\n  };\r\n  const { loading, error, data } = useQuery<ProductDetails, object>(\r\n    PRODUCT_INFO_QUERY,\r\n    {\r\n      variables: queryVariables,\r\n    },\r\n  );\r\n\r\n  function extractProduct(): TransformedProduct {\r\n    console.log(data)\r\n    return ({\r\n      id: data.productByHandle.id,\r\n      handle: data.productByHandle.handle,\r\n      title: data.productByHandle.title,\r\n      description: data.productByHandle.description,\r\n      imageSrc: data.productByHandle.images.edges[0].node.transformedSrc,\r\n      price: data.productByHandle.priceRange.minVariantPrice.amount,\r\n      variants: data.productByHandle.variants,\r\n    });\r\n  }\r\n\r\n  if (!loading && !error && data) {\r\n    product = extractProduct();\r\n  }\r\n\r\n  return (\r\n    <>\r\n      {loading && (\r\n        <Typography variant=\"body1\">Loading...</Typography>\r\n      )}\r\n\r\n      {!loading && !error && product && (\r\n        <>\r\n          <Head>\r\n            <title>{product.title}</title>\r\n            <meta name=\"viewport\" content=\"initial-scale=1.0, width=device-width\" />\r\n          </Head>\r\n          { product.handle === 'm1' ? (\r\n            <ManualToothbrush product={product} />\r\n          // ) : product.handle === \"teeth-whitening-led-device-kit\" ? (\r\n          //   <Whitening product={product} />\r\n          ) :\r\n          (\r\n            <PageContainer size={PageSize.medium} paddingTop={45}>\r\n              <Styled.PDPContainer>\r\n                <Styled.PDPMain>\r\n                  <Link href=\"/\">\r\n                    <Button variant=\"outlined\" color=\"secondary\">Back</Button>\r\n                  </Link>\r\n                  <ProductDetail product={product} />\r\n                </Styled.PDPMain>\r\n              </Styled.PDPContainer>\r\n            </PageContainer>\r\n          )}\r\n        </>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PDPComponent;\r\n"]},"metadata":{},"sourceType":"module"}