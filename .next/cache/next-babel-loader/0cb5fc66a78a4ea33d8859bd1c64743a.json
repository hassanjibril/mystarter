{"ast":null,"code":"var __jsx = React.createElement;\nimport React from 'react';\nimport { AppBar, Toolbar, Typography, IconButton, Drawer, Divider, List } from '@material-ui/core';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport { useQuery } from '@apollo/react-hooks';\nimport { COLLECTIONS_QUERY } from './_types';\nimport './_style.scss';\nimport CartController from '../CartController/CartController';\nimport NavItems from './navItems.json';\nimport NavBarItem from '../NavBarItem/NavBarItem';\n\n/**\r\n * General component description.\r\n */\nconst NavBar = () => {\n  const [open, setOpen] = React.useState(false);\n  const {\n    data,\n    loading,\n    error\n  } = useQuery(COLLECTIONS_QUERY, {\n    variables: {}\n  });\n  console.log(\"D\", data);\n\n  const toggleDrawer = () => {\n    setOpen(!open);\n  };\n\n  return __jsx(React.Fragment, null, __jsx(AppBar, {\n    position: \"static\"\n  }, __jsx(Toolbar, null, __jsx(IconButton, {\n    edge: \"start\",\n    className: \"navbar-button\",\n    color: \"inherit\",\n    \"aria-label\": \"menu\",\n    onClick: toggleDrawer\n  }, __jsx(MenuIcon, null)), __jsx(Typography, {\n    variant: \"h6\"\n  }, \"Colgate Connect\"), __jsx(CartController, null))), __jsx(Drawer, {\n    className: \"navbar-drawer\",\n    variant: \"persistent\",\n    anchor: \"left\",\n    open: open,\n    classes: {\n      paper: 'navbar-drawer'\n    }\n  }, __jsx(\"div\", {\n    className: \"navbar-drawer--header\"\n  }, __jsx(Typography, {\n    variant: \"h6\"\n  }, \"Site Navigation\"), __jsx(IconButton, {\n    onClick: toggleDrawer\n  }, __jsx(ChevronLeftIcon, null))), __jsx(Divider, null), !loading && !error && data && __jsx(List, null, NavItems.navigationItems.map(({\n    title,\n    products\n  }, key) => __jsx(NavBarItem, {\n    title: title,\n    products: products\n  })))));\n};\n\nexport default NavBar;","map":{"version":3,"sources":["E:/current-work/web/react.js/react-next-store/components/NavBar/NavBar.tsx"],"names":["React","AppBar","Toolbar","Typography","IconButton","Drawer","Divider","List","MenuIcon","ChevronLeftIcon","useQuery","COLLECTIONS_QUERY","CartController","NavItems","NavBarItem","NavBar","open","setOpen","useState","data","loading","error","variables","console","log","toggleDrawer","paper","navigationItems","map","title","products","key"],"mappings":";AAAA,OAAOA,KAAP,MAAyC,OAAzC;AACA,SACEC,MADF,EAEEC,OAFF,EAGEC,UAHF,EAIEC,UAJF,EAKEC,MALF,EAMEC,OANF,EAOEC,IAPF,QASO,mBATP;AAUA,OAAOC,QAAP,MAAqB,yBAArB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AAEA,SAASC,QAAT,QAAyB,qBAAzB;AACA,SACEC,iBADF,QAEO,UAFP;AAGA,OAAO,eAAP;AACA,OAAOC,cAAP,MAA2B,kCAA3B;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,UAAP,MAAwC,0BAAxC;;AAaA;;;AAGA,MAAMC,MAAgC,GAAG,MAAM;AAC7C,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBjB,KAAK,CAACkB,QAAN,CAAwB,KAAxB,CAAxB;AACA,QAAM;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,OAAR;AAAiBC,IAAAA;AAAjB,MAA2BX,QAAQ,CACvCC,iBADuC,EAEvC;AAAEW,IAAAA,SAAS,EAAE;AAAb,GAFuC,CAAzC;AAIAC,EAAAA,OAAO,CAACC,GAAR,CAAY,GAAZ,EAAiBL,IAAjB;;AACA,QAAMM,YAAY,GAAG,MAAM;AACzBR,IAAAA,OAAO,CAAC,CAACD,IAAF,CAAP;AACD,GAFD;;AAIA,SACE,4BACE,MAAC,MAAD;AACE,IAAA,QAAQ,EAAC;AADX,KAGE,MAAC,OAAD,QACE,MAAC,UAAD;AACE,IAAA,IAAI,EAAC,OADP;AAEE,IAAA,SAAS,EAAC,eAFZ;AAGE,IAAA,KAAK,EAAC,SAHR;AAIE,kBAAW,MAJb;AAKE,IAAA,OAAO,EAAES;AALX,KAOE,MAAC,QAAD,OAPF,CADF,EAUE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,uBAVF,EAaE,MAAC,cAAD,OAbF,CAHF,CADF,EAoBE,MAAC,MAAD;AACE,IAAA,SAAS,EAAC,eADZ;AAEE,IAAA,OAAO,EAAC,YAFV;AAGE,IAAA,MAAM,EAAC,MAHT;AAIE,IAAA,IAAI,EAAET,IAJR;AAKE,IAAA,OAAO,EAAE;AACPU,MAAAA,KAAK,EAAE;AADA;AALX,KASE;AAAK,IAAA,SAAS,EAAC;AAAf,KACE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAC;AAApB,uBADF,EAEE,MAAC,UAAD;AAAY,IAAA,OAAO,EAAED;AAArB,KACE,MAAC,eAAD,OADF,CAFF,CATF,EAeE,MAAC,OAAD,OAfF,EAgBI,CAACL,OAAD,IAAY,CAACC,KAAb,IAAsBF,IAAtB,IACF,MAAC,IAAD,QACGN,QAAQ,CAACc,eAAT,CAAyBC,GAAzB,CAA6B,CAAC;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,GAAD,EAAsBC,GAAtB,KAC5B,MAAC,UAAD;AAAY,IAAA,KAAK,EAAEF,KAAnB;AAA0B,IAAA,QAAQ,EAAEC;AAApC,IADD,CADH,CAjBF,CApBF,CADF;AA+CD,CA1DD;;AA4DA,eAAef,MAAf","sourcesContent":["import React, { FunctionComponent } from 'react';\r\nimport {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  IconButton,\r\n  Drawer,\r\n  Divider,\r\n  List,\r\n  ListItem, ListItemIcon, ListItemText, Collapse,\r\n} from '@material-ui/core';\r\nimport MenuIcon from '@material-ui/icons/Menu';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport FiberNewIcon from '@material-ui/icons/FiberNew';\r\nimport { useQuery } from '@apollo/react-hooks';\r\nimport {\r\n  COLLECTIONS_QUERY, Collections,\r\n} from './_types';\r\nimport './_style.scss';\r\nimport CartController from '../CartController/CartController';\r\nimport NavItems from './navItems.json';\r\nimport NavBarItem, { ProductItem } from '../NavBarItem/NavBarItem';\r\n\r\ntype Props = {\r\n  /** Navigation items to be displayed in NavBar */\r\n  items: string[];\r\n};\r\n\r\ninterface NavItems {\r\n  title: string;\r\n  handle: string;\r\n  products: ProductItem[];\r\n}\r\n\r\n/**\r\n * General component description.\r\n */\r\nconst NavBar: FunctionComponent<Props> = () => {\r\n  const [open, setOpen] = React.useState<boolean>(false);\r\n  const { data, loading, error } = useQuery<Collections, object>(\r\n    COLLECTIONS_QUERY,\r\n    { variables: {} },\r\n  );\r\n  console.log(\"D\", data)\r\n  const toggleDrawer = () => {\r\n    setOpen(!open);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <AppBar\r\n        position=\"static\"\r\n      >\r\n        <Toolbar>\r\n          <IconButton\r\n            edge=\"start\"\r\n            className=\"navbar-button\"\r\n            color=\"inherit\"\r\n            aria-label=\"menu\"\r\n            onClick={toggleDrawer}\r\n          >\r\n            <MenuIcon />\r\n          </IconButton>\r\n          <Typography variant=\"h6\">\r\n            Colgate Connect\r\n          </Typography>\r\n          <CartController />\r\n        </Toolbar>\r\n      </AppBar>\r\n      <Drawer\r\n        className=\"navbar-drawer\"\r\n        variant=\"persistent\"\r\n        anchor=\"left\"\r\n        open={open}\r\n        classes={{\r\n          paper: 'navbar-drawer',\r\n        }}\r\n      >\r\n        <div className=\"navbar-drawer--header\">\r\n          <Typography variant=\"h6\">Site Navigation</Typography>\r\n          <IconButton onClick={toggleDrawer}>\r\n            <ChevronLeftIcon />\r\n          </IconButton>\r\n        </div>\r\n        <Divider />\r\n        { !loading && !error && data && (\r\n        <List>\r\n          {NavItems.navigationItems.map(({ title, products }, key) => (\r\n            <NavBarItem title={title} products={products} />\r\n          ))}\r\n        </List>\r\n        )}\r\n      </Drawer>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default NavBar;\r\n"]},"metadata":{},"sourceType":"module"}